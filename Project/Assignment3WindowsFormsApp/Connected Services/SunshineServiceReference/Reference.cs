//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment3WindowsFormsApp.SunshineServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSunshine", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class GetSunshine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SunshineServiceReference.IService")]
    public interface IService {
        
        // CODEGEN: Generating message contract since the operation GetSunshine is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSunshine", ReplyAction="http://tempuri.org/IService/GetSunshineResponse")]
        Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse GetSunshine(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSunshine", ReplyAction="http://tempuri.org/IService/GetSunshineResponse")]
        System.Threading.Tasks.Task<Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse> GetSunshineAsync(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSunshineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshine GetSunshine;
        
        public GetSunshineRequest() {
        }
        
        public GetSunshineRequest(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshine GetSunshine) {
            this.GetSunshine = GetSunshine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSunshineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/", Order=0)]
        public string @string;
        
        public GetSunshineResponse() {
        }
        
        public GetSunshineResponse(string @string) {
            this.@string = @string;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Assignment3WindowsFormsApp.SunshineServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Assignment3WindowsFormsApp.SunshineServiceReference.IService>, Assignment3WindowsFormsApp.SunshineServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse Assignment3WindowsFormsApp.SunshineServiceReference.IService.GetSunshine(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest request) {
            return base.Channel.GetSunshine(request);
        }
        
        public string GetSunshine(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshine GetSunshine1) {
            Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest inValue = new Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest();
            inValue.GetSunshine = GetSunshine1;
            Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse retVal = ((Assignment3WindowsFormsApp.SunshineServiceReference.IService)(this)).GetSunshine(inValue);
            return retVal.@string;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse> Assignment3WindowsFormsApp.SunshineServiceReference.IService.GetSunshineAsync(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest request) {
            return base.Channel.GetSunshineAsync(request);
        }
        
        public System.Threading.Tasks.Task<Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineResponse> GetSunshineAsync(Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshine GetSunshine) {
            Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest inValue = new Assignment3WindowsFormsApp.SunshineServiceReference.GetSunshineRequest();
            inValue.GetSunshine = GetSunshine;
            return ((Assignment3WindowsFormsApp.SunshineServiceReference.IService)(this)).GetSunshineAsync(inValue);
        }
    }
}
